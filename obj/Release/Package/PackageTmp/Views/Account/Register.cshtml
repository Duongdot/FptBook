@model FptBookNew1.Models.account

@{
    ViewBag.Title = "Register";
}

@*<h2>Register</h2>
    <section class="register-photo" style="background: rgb(108,252,175);">
        <div class="form-container">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <form method="post" style="width: 842.5px;height: 422px;margin: 0px;padding: 33px 60px;">
                    <h2 class="text-center d-lg-flex justify-content-lg-center" style="font-weight: bold;font-family: Roboto, sans-serif;font-size: 20px;color: var(--bs-body-color);"><strong>Create an account</strong></h2>
                    <div class="mb-3"><input class="form-control" type="email" name="email" placeholder="Email"></div>
                    <div class="mb-3"><input class="form-control" type="password" name="password" placeholder="Password"></div>
                    <div class="mb-3"><input class="form-control" type="password" name="password-repeat" placeholder="Password (repeat)"></div>
                    <div class="mb-3">
                        <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox">I agree to the license terms.</label></div>
                    </div>
                    <div class="mb-3"><button class="btn d-block w-100" type="submit" style="--bs-body-bg: #954747;border-color: var(--bs-teal);background: rgb(126,218,157);">Sign Up</button></div><a class="already" href="#">You already have an account? Login here.</a>
                </form>
            }
        </div>
    </section>*@


<section class="login-dark" style="background: rgb(108,252,175);">
    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <p class="text-danger">@ViewBag.ErrorMessage</p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.username, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.username, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password", @required = "", @style = "margin-bottom: 6px;background: rgb(30,40,51);color: rgb(252,252,252);" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.fullname, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.fullname, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.fullname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.phone, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.address, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.address, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="mb-3"><button class="btn btn-primary d-block w-100" type="submit" style="background: rgb(26,235,147);">Register</button><a class="forgot" href="@Url.Action("Login")">Use your account to login</a></div>
        </div>

        @*Enable this once you have account confirmation enabled for password reset functionality
            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>*@
    }
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
